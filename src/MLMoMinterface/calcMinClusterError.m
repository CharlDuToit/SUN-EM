function [err, ind] = calcMinClusterError(clusterMeans, prop, errorCode)
    %errorcode: the type of error function

    %err: error of mean which has the smallest error
    %ind: index of mean which has the smallest error
    
    switch errorCode
        case 1 %3 properties, new dist, new orientation, new radial
            propScale = [2.53 1.33 1]; %[3.8 2 1.5]
            [err, ind] =min(propScale(1) * abs( log(clusterMeans(:,1)/prop(1) ) ) +...
                propScale(2)*abs(cos(clusterMeans(:,2)) - cos(prop(2))) + ...
                propScale(3)*abs(clusterMeans(:,3) - prop(3)));
        case 2 %5 properties, new dist,new orientation, new radial, old dist, old radial
            %fourUnique_posInt, intInt
            %propScale = [3 1 3 1]; %[2.6 1.5 2.53 1]
            propScale = [3 0.8 1 3 1]; % [2.53 1.5 1.2 2.53 1];
            [err, ind] =min( propScale(1) * abs( log(clusterMeans(:,1)/prop(1) ) ) +...
                propScale(2)*abs(cos(clusterMeans(:,2)) - cos(prop(2)))  +...
                propScale(3)*abs(clusterMeans(:,3) - prop(3))  +...
                propScale(4) * abs( log(clusterMeans(:,4)/prop(4) ) )+... 
                 propScale(5)*abs(clusterMeans(:,5) - prop(5))    );
        case 3 %3 properties new dist, new radial, old radial
            propScale = [2.53 1 1];
            [err, ind] =min( propScale(1) * abs( log(clusterMeans(:,1)/prop(1) ) ) +...
                propScale(2)*abs(clusterMeans(:,2) - prop(2))  +...
                propScale(3)*abs(clusterMeans(:,3) - prop(3))    );
        case 4 %6 properties, 3 new, 3 old
            %four unique extnotExt, extExt, notExtExt
            % same as case 7
            %propScale = [2.53 1.33 1 2.53 1.33 1];
            propScale = [2.53 1.33 1 2.53 1.33 1];
            [err, ind] =min(propScale(1) * abs( log(clusterMeans(:,1)/prop(1) ) ) +...
                propScale(2)*abs(cos(clusterMeans(:,2)) - cos(prop(2))) + ...
                propScale(3)*abs(clusterMeans(:,3) - prop(3)) + ...
                propScale(4)*abs( log(clusterMeans(:,4)/prop(4) ) ) +...
                propScale(5)*abs(cos(clusterMeans(:,5)) - cos(prop(5))) + ...
                propScale(6)*abs(clusterMeans(:,6) - prop(6))  );
        case 5 %1 property, new edge length
            %twounique_int
            [err, ind] =min(abs( log(clusterMeans(:,1)/prop(1) ) ) );
        case 6 %4 properties, new dist, new radial, old dist, old radial
            %%threeUnique_parIntParInt, extNotExt, extExt
            propScale = [2.53 1 2.53 1];
            [err, ind] =min( propScale(1) * abs( log(clusterMeans(:,1)/prop(1) ) ) +...
                propScale(2)*abs(clusterMeans(:,2) - prop(2))  +...
                propScale(3) * abs( log(clusterMeans(:,3)/prop(3) ) )+...
                propScale(4)*abs(clusterMeans(:,4) - prop(4))    );
        case 7 %6 properties, 3 new, 3 old
            %same as case 4
            %fourunique notextnotext
            %propScale = [2.53 1.33 1.3 2.53 1.33 1.3];
            propScale = [2.53 1.33 1.3 2.53 1.33 1.3];
            [err, ind] =min(propScale(1) * abs( log(clusterMeans(:,1)/prop(1) ) ) +...
                propScale(2)*abs(cos(clusterMeans(:,2)) - cos(prop(2))) + ...
                propScale(3)*abs(clusterMeans(:,3) - prop(3)) + ...
                propScale(4)*abs( log(clusterMeans(:,4)/prop(4) ) ) +...
                propScale(5)*abs(cos(clusterMeans(:,5)) - cos(prop(5))) + ...
                propScale(6)*abs(clusterMeans(:,6) - prop(6))  );
%             propScale = [2.53 1.33 2.04 2.53 1.33 2.04];
%             [err, ind] =min(propScale(1) * abs( log(clusterMeans(:,1)/prop(1) ) ) +...
%                 propScale(2)*abs(cos(clusterMeans(:,2)) - cos(prop(2))) + ...
%                 propScale(3)*abs(cos(clusterMeans(:,3)) - cos(prop(3))) + ...
%                 propScale(4)*abs( log(clusterMeans(:,4)/prop(4) ) ) +...
%                 propScale(5)*abs(cos(clusterMeans(:,5)) - cos(prop(5))) + ...
%                 propScale(6)*abs(cos(clusterMeans(:,6)) - cos(prop(6)))  );
        case 8 %3 property, new edge length,new posneg , old posneg
            %twounique_pos neg ext
            propScale = [1 1 10];
            [err, ind] =min( propScale(1) * abs( log(clusterMeans(:,1)/prop(1) ) ) +...
                propScale(2)*abs(clusterMeans(:,2) - prop(2))  +...
                propScale(3)*abs(clusterMeans(:,3) - prop(3))    );
        case 9 %5 property, new edge length, new pos m, new neg m, old pos n old neg n
            %twounique_pos neg ext
            propScale = [1 5 5 5 5];
            [err, ind] =min( propScale(1) * abs( log(clusterMeans(:,1)/prop(1) ) ) +...
                propScale(2)*abs(clusterMeans(:,2) - prop(2))  +...
                propScale(3)*abs(clusterMeans(:,3) - prop(3))  +...
                propScale(4)*abs(clusterMeans(:,4) - prop(4))   +...
                propScale(5)*abs(clusterMeans(:,5) - prop(5)) );
        case 10 %4 properties, new dist, new radial, old dist, old radial
            %fourUnique_posInt, intInt
            propScale = [3 1 3 1]; %[2.6 1.5 2.53 1]
            [err, ind] =min( propScale(1) * abs( log(clusterMeans(:,1)/prop(1) ) ) +...
                propScale(2)*abs(clusterMeans(:,2) - prop(2))  +...
                propScale(3) * abs( log(clusterMeans(:,3)/prop(3) ) )+...
                propScale(4)*abs(clusterMeans(:,4) - prop(4))    );
        case 11 %5 properties, new dist, new orientation, new radialm m length, n length
            propScale = [2.53 1.33 1 1 1]; %[3.8 2 1.5]
            [err, ind] =min(propScale(1) * abs( log(clusterMeans(:,1)/prop(1) ) ) +...
                propScale(2)*abs(cos(clusterMeans(:,2)) - cos(prop(2))) + ...
                propScale(3)*abs(clusterMeans(:,3) - prop(3)) +...
                propScale(4) * abs( log(clusterMeans(:,4)/prop(4) ) ) +...
                propScale(5) * abs( log(clusterMeans(:,5)/prop(5) ) ) );
         case 12 %2 properties,m length, n length
            propScale = [1 1]; %[3.8 2 1.5]
            [err, ind] =min(propScale(1) * abs( log(clusterMeans(:,1)/prop(1) ) ) +...
                            propScale(2) * abs( log(clusterMeans(:,2)/prop(2) ) ) );
            
        otherwise
            err = 0;
            ind = 0;
    end


end